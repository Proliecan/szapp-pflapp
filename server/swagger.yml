# This is the configuration file for the api

swagger: "2.0"
info:
  description: API configuration file for the Szapp-Pflapp Webapplication.
  version: "0.1"
  title: Szapp-Pflapp Config file
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

paths:
  /plants:
    get:
      operationId: server.plants.read_all
      tags:
        - Plants
      summary: Read the entire list of plants
      description: Read the list of plants
      responses:
        200:
          description: Successfully read plants list operation
          schema:
            type: array
            items:
              properties:
                name:
                  type: string
                id:
                  type: integer
                creation_date:
                  type: string
                last_update:
                  type: string
                image_file:
                  type: string
                min_fill_value:
                  type: integer
                max_fill_value:
                  type: integer
                values:
                  type: integer
    post:
      operationId: server.plants.create_plant
      tags:
        - plants
      summary: Create a plant and add it to the plants list
      description: Create a new plant in the plants list
      parameters:
        - name: plant
          in: body
          description: plant to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
              image_file:
                type: string
              min_fill_value:
                type: integer
              max_fill_value:
                type: integer
      responses:
        201:
          description: Successfully created plant in list
  /plant/{plant_id}:
    get:
      operationId: server.plants.read_one
      tags:
        - plants
      summary: Read one plant from the plants list
      description: Read one plant from the plants list
      parameters:
        - name: plant_id
          in: path
          description: ID of the plant to get from the list
          type: integer
          required: True
      responses:
        200:
          description: Successfully read plant from plants list operation
          schema:
            type: object
            properties:
              name:
                type: string
                description: TODO
              plant_id:
                type: integer
                description: TODO
              creation_date:
                type: string
                description: TODO
              last_update:
                type: string
                description: TODO
              image_file:
                type: string
                description: TODO
              min_fill_value:
                type: integer
                description: TODO
              max_fill_value:
                type: integer
                description: TODO
              values:
                type: array
                items:
                  properties:
                    plant_id: 
                      type: integer
                      description: Id of the plant
                    id: 
                      type: integer
                      description: Id of this water value
                    value:
                      type: integer
                      description: Value
                    report_time:
                      type: string
                      description: Report time in UTC
    delete:
      operationId: server.plants.delete
      tags:
        - plants
        - waterlevel_values
      summary: Delete the selected plant
      description: call for deleting selected plant and its values
      parameters:
        - name: plant_id
          in: path
          description: Id of plant to delete
          type: integer
          required: True
      responses:
        200:
          description: Succesfully deleted plant and its values
        409:
          description: Could not delete plant
    put:
      operationId: server.plants.update
      tags:
        - plants
      summary: Update a plant in the plants list
      description: Update a plant in the plants list
      parameters:
        - name: plant_id
          in: path
          type: integer
          description: Id of plant
          required: True
        - name: new_plant
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              id:
                type: integer
              creation_date:
                type: string
              last_update:
                type: string
              image_file:
                type: string
              min_fill_value:
                type: integer
              max_fill_value:
                type: integer
      responses:
        200:
          description: Successfully updated plant in plants list
  /water_values/{plant_id}:
    get:
      operationId: server.water_values.read_all_by_id
      tags:
        - water_values
      summary: Read all values of one plant
      description: Reads all given values of one plant by its ID
      parameters:
        - name: plant_id
          in: path
          type: integer
          description: id of plant
          required: True
      responses:
        200:
          description: Successfully read all values of one plant
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                  description: TODO
                name: 
                  type: integer
                  description: TODO
                plant_id:
                  type: integer
                  description: TODO
                report_time:
                  type: string
                  description: TODO
                value:
                  type: integer
                  description: TODO
        404: 
          description: plant_id could not be found